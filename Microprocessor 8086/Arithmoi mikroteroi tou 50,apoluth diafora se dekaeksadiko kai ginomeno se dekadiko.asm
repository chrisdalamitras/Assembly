INCLUDE "MACROS.TXT"

DATA SEGMENT
    MESSAGE1 DB "DWSE ARITHMOUS:",'$'
    MESSAGE2 DB "HEX:",'$'
    MESSAGE3 DB "OCT:",'$'
    NEWLINE  DB 0AH,0DH,'$'    
DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE,DS:DATA,SS:STACK
    
    PRINT_DEC PROC NEAR
    MOV BX,0
    MOV CX,0
LOOP1:
    SUB DX,2710H
    CMP DX,0
    JL  EXIT1
    INC BH
    JMP LOOP1
EXIT1:
    ADD BH,30H
    ADD DX,2710H
LOOP2:
    SUB DX,03E8H
    CMP DX,0
    JL  EXIT2
    INC BL
    JMP LOOP2
EXIT2:
    ADD BL,30H
    ADD DX,03E8H
LOOP3:
    SUB DX,64H
    CMP DX,0
    JL  EXIT3
    INC CH
    JMP LOOP3
EXIT3:     
    ADD CH,30H
    ADD DX,64H
LOOP4:
    SUB DX,0AH
    CMP DX,0
    JL  EXIT4
    INC CL
    JMP LOOP4
EXIT4:
    ADD CL,30H
    ADD DX,0AH
    ADD DX,30H
    CMP BH,30H
    JE  NOT_ALL
    PUSH DX
    PRINT BH
    POP DX
NOT_ALL:
    PUSH DX    
    PRINT BL
    PRINT CH
    PRINT CL
    POP DX
    PRINT DL
    RET
PRINT_DEC ENDP 
    
    PRINT_HEX_DIGIT PROC NEAR
    CMP AL,09H
    JG  LETTER
NUMBER:
    ADD AL,30H
    PRINT AL
    RET
LETTER:
    ADD AL,37H
    PRINT AL
    RET
PRINT_HEX_DIGIT ENDP

PRINT_HEX PROC NEAR
    MOV BX,CX
    AND CX,0F000H
    ROR CH,1
    ROR CH,1
    ROR CH,1
    ROR CH,1
    MOV AL,CH
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,0F00H
    MOV AL,CH
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,00F0H
    ROR CL,1
    ROR CL,1
    ROR CL,1
    ROR CL,1          
    MOV AL,CL
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,000FH
    MOV AL,CL
    CALL PRINT_HEX_DIGIT
	MOV CX,BX
    RET
PRINT_HEX ENDP
                                   
READ_DEC PROC NEAR
    MOV CX,2
    MOV BX,0
AGAIN:
    READ
    CMP CX,1
    JE DEUTERO
    CMP AL,30H
    JL  AGAIN
    CMP AL,34H
    JG  AGAIN
    JMP SUNEXEIA 
DEUTERO:
    CMP AL,30H
    JL  AGAIN
    CMP AL,39H
    JG  AGAIN
SUNEXEIA:
    SAL BX,4
    PUSH AX
    PUSH DX
    PRINT AL
    POP DX
    POP AX
    MOV AH,0
    SUB AL,30H
    ADD BX,AX
    LOOP AGAIN
    RET
END1:
    MOV DL,AL
    PUSH DX
    PRINT AL
    POP DX
    RET
READ_DEC ENDP

PRODUCE_DEC PROC NEAR
    MOV CX,4
    MOV DX,0
ADDR1:    
    MOV AX,10
    MUL DX
    MOV DX,AX
    ROL BX,4
    MOV AX,BX
    AND AX,000FH
    ADD DX,AX 
    LOOP ADDR1
    MOV CX,DX
    RET
PRODUCE_DEC ENDP

MAIN PROC FAR
    MOV AX,DATA
    MOV DS,AX
START: 
      PRINT_STR MESSAGE1
      CALL READ_DEC
      CALL PRODUCE_DEC
      MOV AX,DX
      MOV DX,4000H
      OUT DX,AX
      PRINT 20H
      CALL READ_DEC   
      CALL PRODUCE_DEC
      MOV BX,DX
      MOV AX,DX
      MOV DX,4001H
      OUT DX,AX
      MOV DX,4000H
      IN AX,DX
      MOV CX,AX
ENTER:
      READ
      CMP AL,0DH
      JNE ENTER
      MOV CH,00
      MOV BH,00
      
      CMP CX,BX
      JG DIAFORACX
      SUB BL,CL
      MOV CX,BX
      JMP SUNEXEIA1
DIAFORACX:
      SUB CL,BL
SUNEXEIA1: 
      PRINT_STR NEWLINE
      CALL PRINT_HEX
      PRINT_STR NEWLINE
      
      MOV DX,4000H
      IN AX,DX
      MOV AH,00
      MOV BX,AX
      MOV DX,4001H
      IN AX,DX
      MOV AH,00
      MUL BX
      MOV DX,AX
      CALL PRINT_DEC
      PRINT_STR NEWLINE
      

    JMP START
ENDING:
    EXIT     
    
CODE ENDS
END MAIN