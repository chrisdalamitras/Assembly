INCLUDE "MACROS.TXT"
DATA SEGMENT
    MESSAGE1 DB "ENTER 6 DECIMAL NUMBERS:",'$'
    MESSAGE2 DB "ATHROISMA ARTIWN=",'$'
    MESSAGE3 DB "SUNOLIKO ATHROISMA=",'$'
    NEWLINE  DB 0AH,0DH,'$'    
DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE,DS:DATA,SS:STACK
                                   
; Fill with functions here

MAIN PROC FAR
    MOV AX,DATA
    MOV DS,AX
START:
PRINT_STR MESSAGE1 
MOV DX,4000H
MOV CX,0
AGAIN:
    READ
    CMP AL,30H
    JL  AGAIN
    CMP AL,39H
    JG  AGAIN
    OUT DX,AL
    INC CX
    INC DX
    CMP CX,6
    JE ENTER
    JMP AGAIN
    
ENTER:
    MOV DX,4000H
    READ
    CMP AL,13
    JE PRINTDEC
    JMP ENTER

PRINTDEC:
    IN AX,DX
    PRINT AL
    INC DX
    CMP DX,4006H
    JE SUMART
    JMP PRINTDEC
SUMART:
    MOV BX,0000H
    MOV DX,4000H
    DEC DX
EPAN:
    INC DX
    CMP DX,4006H
    JE SUMALL
    IN AX,DX
    SUB AL,30H
    ADD BH,AL
    CMP AL,1
    JE EPAN
    CMP AL,3
    JE EPAN
    CMP AL,5
    JE EPAN
    CMP AL,7
    JE EPAN
    CMP AL,9
    JE EPAN 
    ADD BL,AL
    JMP EPAN
SUMALL:
    PRINT_STR NEWLINE
    PRINT_STR MESSAGE2
    MOV AX,BX 
    OUT DX,AX
    MOV BH,00H
    MOV CX,BX

PRINT_HEX PROC NEAR
    MOV BX,CX
    AND CX,0F000H
    ROR CH,1
    ROR CH,1
    ROR CH,1
    ROR CH,1
    MOV AL,CH
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,0F00H
    MOV AL,CH
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,00F0H
    ROR CL,1
    ROR CL,1
    ROR CL,1
    ROR CL,1          
    MOV AL,CL
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,000FH
    MOV AL,CL
    CALL PRINT_HEX_DIGIT
	MOV CX,BX
    JMP ALLO
PRINT_HEX ENDP 

    PRINT_HEX_DIGIT PROC NEAR
    CMP AL,09H
    JG  LETTER
NUMBER:
    ADD AL,30H
    PRINT AL
    RET
LETTER:
    ADD AL,37H
    PRINT AL
    RET
PRINT_HEX_DIGIT ENDP 
    ALLO:
    PRINT_STR NEWLINE
    PRINT_STR MESSAGE3
    MOV DX,4006H
    IN AX,DX
    MOV BX,AX
    MOV BL,BH
    MOV BH,00H
    MOV DX,BX
    PRINT_DEC PROC NEAR
    MOV BX,0
    MOV CX,0
LOOP1:
    SUB DX,2710H
    CMP DX,0
    JL  EXIT1
    INC BH
    JMP LOOP1
EXIT1:
    ADD BH,30H
    ADD DX,2710H
LOOP2:
    SUB DX,03E8H
    CMP DX,0
    JL  EXIT2
    INC BL
    JMP LOOP2
EXIT2:
    ADD BL,30H
    ADD DX,03E8H
LOOP3:
    SUB DX,64H
    CMP DX,0
    JL  EXIT3
    INC CH
    JMP LOOP3
EXIT3:     
    ADD CH,30H
    ADD DX,64H
LOOP4:
    SUB DX,0AH
    CMP DX,0
    JL  EXIT4
    INC CL
    JMP LOOP4
EXIT4:
    ADD CL,30H
    ADD DX,0AH
    ADD DX,30H
    CMP BH,30H
    JE  NOT_ALL
    PUSH DX
    PRINT BH
    POP DX
NOT_ALL:
    PUSH DX    
    PRINT BL
    PRINT CH
    PRINT CL
    POP DX
    PRINT DL
    JMP SUMING
PRINT_DEC ENDP
SUMING:
    
    
    
    PRINT_STR NEWLINE
    JMP START
ENDING:
    EXIT     
    
CODE ENDS
END MAIN