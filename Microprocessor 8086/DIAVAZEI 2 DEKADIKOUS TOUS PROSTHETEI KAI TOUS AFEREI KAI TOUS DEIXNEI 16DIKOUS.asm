INCLUDE "MACROS.TXT"

DATA SEGMENT
    MESSAGE1 DB "ÂENTER 2 DEMICAL NUMBERS:",'$'
    MESSAGE2 DB "HEX:",'$'
    MESSAGE3 DB "OCT:",'$'
    NEWLINE  DB 0AH,0DH,'$'    
DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE,DS:DATA,SS:STACK 
    
    PRINT_HEX_DIGIT PROC NEAR
    CMP AL,09H
    JG  LETTER
NUMBER:
    ADD AL,30H
    PRINT AL
    RET
LETTER:
    ADD AL,37H
    PRINT AL
    RET
PRINT_HEX_DIGIT ENDP

PRINT_HEX PROC NEAR
    MOV BX,CX
    AND CX,0F000H
    ROR CH,1
    ROR CH,1
    ROR CH,1
    ROR CH,1
    MOV AL,CH
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,0F00H
    MOV AL,CH
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,00F0H
    ROR CL,1
    ROR CL,1
    ROR CL,1
    ROR CL,1          
    MOV AL,CL
    CALL PRINT_HEX_DIGIT
    MOV CX,BX
    AND CX,000FH
    MOV AL,CL
    CALL PRINT_HEX_DIGIT
	MOV CX,BX
    RET
PRINT_HEX ENDP

READ_DEC PROC NEAR
    MOV CX,1
    MOV BX,0
AGAIN:
    READ
    CMP AL,30H
    JL  AGAIN
    CMP AL,39H
    JG  AGAIN
    SAL BX,4
    PUSH AX
    PUSH DX
    PRINT AL
    POP DX
    POP AX
    MOV AH,0
    SUB AL,30H
    ADD BX,AX
    LOOP AGAIN
    RET
END1:
    MOV DL,AL
    PUSH DX
    PRINT AL
    POP DX
    RET
READ_DEC ENDP

PRODUCE_DEC PROC NEAR
    MOV CX,4
    MOV DX,0
ADDR1:    
    MOV AX,10
    MUL DX
    MOV DX,AX
    ROL BX,4
    MOV AX,BX
    AND AX,000FH
    ADD DX,AX 
    LOOP ADDR1
    MOV CX,DX
    RET
PRODUCE_DEC ENDP

MAIN PROC FAR
    MOV AX,DATA
    MOV DS,AX
START:

    PRINT_STR MESSAGE1
ARXH:
    CALL READ_DEC
    CALL PRODUCE_DEC
    MOV AX,DX
    MOV DX,4000H
    OUT DX,AX
    CALL READ_DEC
    CALL PRODUCE_DEC
    MOV AX,DX
    MOV DX,4001H
    OUT DX,AX
EKSODOS:
    READ
    CMP AL,0DH
    JE NEXT
    JNE EKSODOS
NEXT:
    MOV CX,00H    
    MOV DX,4000H
    IN AX,DX
    MOV AH,00
    ADD CX,AX
    MOV DX,4001H
    IN AX,DX
    MOV AH,00
    ADD CX,AX
    MOV AX,CX
    MOV CH,00
    PRINT_STR NEWLINE
    CALL PRINT_HEX
    PRINT_STR NEWLINE
NEXT1:
    MOV CX,00
    MOV DX,4000H
    IN AX,DX
    MOV AH,00
    MOV CX,AX
    MOV DX,4001H
    IN AX,DX
    MOV AH,00
    CMP AX,CX
    JG ARNHTIKOS
    SUB CX,AX
    CALL PRINT_HEX
    PRINT_STR NEWLINE
    JMP NEXT3
ARNHTIKOS:
    SUB AX,CX
    MOV AL,2DH
    PRINT AL
    CALL PRINT_HEX
    PRINT_STR NEWLINE
    
NEXT3:    

    JMP START
ENDING:
    EXIT     
    
CODE ENDS
END MAIN